pipeline {
    agent any
    tools {
        maven 'Maven'
        jdk 'JDK21'
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/lenam0910/Stratec.git', credentialsId: 'github-lenam0910', branch: 'main'
            }
        }
        stage('Debug Checkout') {
            steps {
                sh 'ls -la'
                sh 'find . -name pom.xml || echo "pom.xml not found"'
                sh 'find . -name Dockerfile || echo "Dockerfile not found"'
            }
        }
        stage('Debug Maven') {
            steps {
                dir('satrect') {
                    withMaven(maven: 'Maven') {
                        sh 'mvn --version'
                    }
                }
            }
        }
        stage('Build') {
            steps {
                dir('satrect') {
                    withMaven(maven: 'Maven') {
                        sh 'mvn clean package -DskipTests'
                    }
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Tests skipped during build'
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('satrect') {
                    script {
                        // Sử dụng Docker Pipeline plugin
                        def dockerImage = docker.build('satrect-app:latest')
                    }
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                            docker.image('satrect-app:latest').push()
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                if [ -n "$(docker ps -q --filter name=satrect-app)" ]; then
                    docker stop satrect-app
                fi
                if [ -n "$(docker ps -a -q --filter name=satrect-app)" ]; then
                    docker rm satrect-app
                fi
                docker run -d --name satrect-app -p 8081:8080 satrect-app:latest
                '''
            }
        }
    }
    post {
        always {
            echo 'Pipeline completed!'
        }
        success {
            echo 'Build and deployment successful!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
